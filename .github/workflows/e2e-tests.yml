name: Run E2E Tests

on:
  pull_request:
    paths: 
      - 'terraform/**'
      - '.github/**'
            
jobs:
  run-e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-22.04
    env:
        PROJECT_PATH: ./src/Dfe.PlanTech.Web/Dfe.PlanTech.Web.csproj 
        KEYVAULT_NAME: ${{ secrets.AZ_ENVIRONMENT }}${{ secrets.DFE_PROJECT_NAME }}-kv
        RESOURCE_GROUP: ${{ secrets.AZ_ENVIRONMENT }}${{ secrets.DFE_PROJECT_NAME }}
        SQL_IP_NAME: e2e-tests-pr
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Azure CLI Login
        uses: ./.github/actions/azure-login
        with:
          az_tenant_id: ${{ secrets.AZ_TENANT_ID }}
          az_subscription_id: ${{ secrets.AZ_SUBSCRIPTION_ID }}
          az_client_id: ${{ secrets.AZ_CLIENT_ID }}
          az_client_secret: ${{ secrets.AZ_CLIENT_SECRET }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
            dotnet-version: 7.0.x
    
      - name: Install dependencies
        shell: bash
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build project
        shell: bash
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore --output ./build

      - name: Get workflow IP address
        id: whats-my-ip
        uses: ./.github/actions/whats-my-ip-address
  
      - name: Add Azure firewall rules
        uses: ./.github/actions/azure-ip-whitelist
        with:
          resource_group: ${{ env.RESOURCE_GROUP}}
          ip_address: ${{ steps.whats-my-ip.outputs.ip }}
          verb: "add"
          keyvault_name: ${{ env.KEYVAULT_NAME }}
          name: ${{ env.SQL_IP_NAME }}
          sql_database_server_name: ${{ env.RESOURCE_GROUP }}

      - name: Run project
        shell: bash
        run: |
          export ASPNETCORE_ENVIRONMENT=Production
          export KeyVaultName=${{ env.KEYVAULT_NAME }}
          dotnet ./build/Dfe.PlanTech.Web.dll

      - name: Cypress tests
        uses: ./.github/actions/run-e2e-tests
        with:
          url: https://localhost:8080
          dsi_url: ${{ secrets.DSI_URL }}
          dsi_username: ${{ secrets.DSI_USERNAME }}
          dsi_password: ${{ secrets.DSI_PASSWORD }}
      
      - name: Remove Azure firewall rules
        uses: ./.github/actions/azure-ip-whitelist
        with:
          resource_group: ${{ env.RESOURCE_GROUP}}
          ip_address: ${{ steps.whats-my-ip.outputs.ip }}
          verb: "remove"
          keyvault_name: ${{ env.KEYVAULT_NAME }}
          name: ${{ env.SQL_IP_NAME }}
          sql_database_server_name: ${{ env.RESOURCE_GROUP }}
  
  