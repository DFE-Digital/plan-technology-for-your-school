name: Run .NET coverage and sonar cloud

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    paths: 
      - 'src/**'
      - 'tests/**'

jobs:
  sonar-cloud:
    name: Run SonarCloud checks + coverage
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Install SonarCloud scanners
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Install dotnet coverage
      run: dotnet tool install --global dotnet-coverage
    - name: Restore dependencies
      run: dotnet restore "plan-technology-for-your-school.sln"
    - name: Build, Test and Analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner begin /k:"DFE-Digital_plan-technology-for-your-school" /o:"dfe-digital" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.coverage.exclusions=src/**/Program.cs
        dotnet build "plan-technology-for-your-school.sln" --no-restore
        dotnet-coverage collect "dotnet test plan-technology-for-your-school.sln" -f xml -o "coverage.xml" -s "coverage.settings.xml"
        dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
