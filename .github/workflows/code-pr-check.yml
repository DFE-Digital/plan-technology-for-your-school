name: Code PR Check 

on:
  push:
    branches: ["main", "development"]
    paths:
      - 'src/**'
      - 'tests/**'
  pull_request:
    branches: ["main", "development"]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/code-pr-check.yml'

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
  
env:
  DOTNET_VERSION: ${{ vars.DOTNET_VERSION }}
  
jobs:

  lint-code:
    name: Lint Code and Commit Changes
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Temporarily Update Global JSON
        run: echo '{"sdk":{"version":"${{ env.DOTNET_VERSION }}"}}' > ./global.json

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: ./global.json
          cache: false
        env:
          DOTNET_INSTALL_DIR: "/usr/share/dotnet"
          DOTNET_CLI_TELEMETRY_OPTOUT: true
        
      - name: Run Linter
        uses: wearerequired/lint-action@v2
        with:
          dotnet_format: true
          dotnet_format_dir: "./src/"
          git_email: "41898282+github-actions[bot]@users.noreply.github.com"
          git_name: "github-actions[bot]"
          commit: false   # TODO: REPLACE false WITH true AFTER TESTING
          auto_fix: false # TODO: REPLACE false WITH true AFTER TESTING
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Commit & Push # TODO: Make into Action to avoid duplication
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     if [[ `git status --porcelain` ]]; then
      #       git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #       git config --local user.name "github-actions[bot]"
      #       git commit -am "refactor: Lint Code"
      #       git push
      #       echo "Commited Changes"
      #     else
      #       echo "No Changes to Commit"
      #     fi

  build-test-web-app:  
    name: Build and run unit tests
    runs-on: ubuntu-20.04
    needs: [lint-code]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install dotnet coverage
        run: dotnet tool install --global dotnet-coverage
  
      - name: Install SonarCloud scanners
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install latest JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
          
      - name: Start SonarCloud scanner
        run: |
          dotnet-sonarscanner begin \
          /k:"DFE-Digital_plan-technology-for-your-school" \
          /o:"dfe-digital" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml \
          /d:sonar.coverage.exclusions=src/**/Program.cs,src/Dfe.PlanTech.Web/gulpfile.js,src/Dfe.PlanTech.Web/wwwroot/** \
          /d:sonar.issue.ignore.multicriteria=e1 \
          /d:sonar.issue.ignore.multicriteria.e1.ruleKey=csharpsquid:S6602 \
          /d:sonar.issue.ignore.multicriteria.e1.resourceKey=src/**/*.cs
      
      - name: Build web app  
        uses: ./.github/actions/build-dotnet-app
        with:
          dotnet_version: ${{ env.DOTNET_VERSION }}  
          solution_filename: plan-technology-for-your-school.sln

      - name: Run unit tests
        uses: ./.github/actions/run-unit-tests
        with:
          solution_filename: plan-technology-for-your-school.sln

      - name: Merge test results
        run: dotnet-coverage merge -f xml -o "coverage.xml" -s "coverage.settings.xml" -r coverage.cobertura.xml

      - name: End SonarCloud Scanner
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage.xml

  build-database-upgrader:  
    name: Build database upgrader
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build database upgrader  
        uses: ./.github/actions/build-dotnet-app
        with:
          dotnet_version: ${{ env.DOTNET_VERSION }}  
          solution_filename: Dfe.PlanTech.DatabaseUpgrader.sln

  run-javascript-tests:
    runs-on: ubuntu-latest
    name: Run javascript tests

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "latest"

      - name: Install Dependencies
        run: npm install

      - name: Run the tests
        run: npm test

      - name: Test report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: ./junit.xml    # Path to test results
          reporter: jest-junit        # Format of test results