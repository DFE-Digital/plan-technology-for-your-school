name: Run Database Upgrader
description: Builds and runs the PlanTech database upgrader app

inputs:
  dotnet_version:
    required: true
    type: string
  # az_devops_project_url:
  #   required: true
  #   type: string
  # az_devops_pipeline_name:
  #   required: true
  #   type: string
  # az_devops_pat:
  #   required: true
  #   type: string
  az_keyvault_name:
    required: true
    type: string  
  az_keyvault_database_connectionstring_name:
    required: true
    type: string  
  az_sql_database_server_name:
    required: true
    type: string  
  az_resource_group_name:
    required: true
    type: string 

runs:
  using: composite

  steps:
    - name: Build database upgrader  
      uses: ./.github/actions/build-dotnet-app
      with:
        dotnet_version: ${{ inputs.dotnet_version }}  
        solution_filename: Dfe.PlanTech.DatabaseUpgrader.sln

    - name: Get Workflow runner IP
      shell: bash
      run: |
        echo "RUNNER_IP=$(curl -s 'https://api.ipify.org?format=json' | jq -r '.ip')" >> $GITHUB_ENV
        if ! [[ $RUNNER_IP =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "RUNNER_IP is not set to a valid IP address"
          exit 1
        fi

    - name: Open Azure Firewalls
      shell: bash
      run: |
        az sql server firewall-rule create --resource-group ${{ inputs.az_resource_group_name }} --server ${{ inputs.az_sql_database_server_name }} --name db-upgrader --start-ip-address ${{ env.RUNNER_IP }} --end-ip-address ${{ env.RUNNER_IP }}
        az keyvault network-rule add --resource-group ${{ inputs.az_resource_group_name }} --name ${{ inputs.az_keyvault_name }} --ip-address ${{ env.RUNNER_IP }}

    - name: Get connection string
      shell: bash
      run: |
        echo "CONNECTION_STRING=$(az keyvault secret show --name ${{ inputs.az_keyvault_database_connectionstring_name }} --vault-name ${{ inputs.az_keyvault_name }} --query value -o tsv)" >> $GITHUB_ENV

    - name: Run database upgrader
      shell: bash
      run: dotnet ./build/Dfe.PlanTech.DatabaseUpgrader.dll "${{ env.CONNECTION_STRING }}"

    - name: Close Azure Firewalls
      shell: bash
      run: |
        az sql server firewall-rule delete --resource-group ${{ inputs.az_resource_group_name }} --server ${{ inputs.az_sql_database_server_name }} -name db-upgrader
        az keyvault network-rule remove --resource-group ${{ inputs.az_resource_group_name }} --name ${{ inputs.az_keyvault_name }} --ip-address ${{ env.RUNNER_IP }}

    # - name: Azure Pipelines Action
    #   uses: Azure/pipelines@v1
    #   with:
    #     azure-devops-project-url: ${{ inputs.az_devops_project_url }}
    #     azure-pipeline-name: ${{ inputs.az_devops_pipeline_name }}
    #     azure-devops-token: ${{ inputs.az_devops_pat }}